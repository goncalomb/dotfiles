#!/bin/bash

config() {
    # run some commands on the remote before the download
    # run_remote <command>
    run_remote "rm -r \"/sdcard/DCIM/.thumbnails\" || true"

    # register paths to download
    # register_path <full-path> <name>
    register_path "/sdcard/DCIM" "DCIM"
    register_path "/sdcard/Pictures" "Pictures"
    register_path "/sdcard/Recording" "Recording"
    register_path "/data/data/com.termux/files/home/logdata" "logdata" # files from the logdata script
}

# ------------------------------------------------------------------------------

set -e

if [ -z "$1" ]; then
    echo "android-bak <host> [port (default 22)] [backup location (default \$HOME)]"
    exit
fi

HOST="$1"
PORT="${2:-22}"
LOCAL_DIR="${3:-$HOME}/android-bak"
DAY=$(date +%Y%m%d)
DAY_DIR="$LOCAL_DIR/$DAY"

echo "Backup directory: $DAY_DIR"

TEMP_REMOTE_SCRIPT=$(mktemp)
TEMP_LOCAL_SCRIPT=$(mktemp)

cleanup() {
    rm "$TEMP_REMOTE_SCRIPT" "$TEMP_LOCAL_SCRIPT"
}

trap cleanup EXIT

cat > "$TEMP_REMOTE_SCRIPT" <<'EOF'
set -e

if ! hash filekeep 2>/dev/null; then
    echo "Installing filekeep..."
    if [ -d "filekeep" ]; then
        git -C "filekeep" fetch -v
    else
        git clone "https://github.com/goncalomb/filekeep.git"
    fi
    pip3 install --upgrade "filekeep/"
fi

process_dir() {
    if [ -d "$1" ]; then
        echo "Processing '$1'..."
        cd "$1"
        if [ ! -f "filekeep.xml" ]; then
            echo "Running filekeep..."
            filekeep create
        fi
    fi
}

echo
EOF

download_dir() {
    echo
    if echo "if [ -d \"$1\" ]; then true; else false; fi" | ssh -T -p "$PORT" "$HOST"; then
        echo "Downloading '$1'..."
        mkdir -p "$2"
        rsync --info=progress2 --info=name0 -av -e "ssh -p $PORT" "$HOST:$1/" "$2" && echo -en "\e[5A\e[0J"
        echo "Checking '$2'..."
        cd "$2"
        filekeep verify && echo -e "\e[1;37;42mFILES OK\e[0m" || echo -e "\e[1;37;41mSOMETHING IS NOT RIGHT, CHECK THE LOG!\e[0m"
    else
        echo "'$1' not found on remote."
    fi
}

run_remote() {
    echo "$1" >> "$TEMP_REMOTE_SCRIPT"
}

register_path() {
    echo "process_dir \"$1\"" >> "$TEMP_REMOTE_SCRIPT"
    echo "download_dir \"$1\" \"\$DAY_DIR/$2_\$DAY\"" >> "$TEMP_LOCAL_SCRIPT"
}

# run config
config
# do remote work
cat "$TEMP_REMOTE_SCRIPT" | ssh -T -p "$PORT" "$HOST"
# do local work
. "$TEMP_LOCAL_SCRIPT"
